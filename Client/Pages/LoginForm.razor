@page "/registrationform"
@inject IJSRuntime _jsRuntime
@inject HttpClient _http

    <h3>RegistrationForm</h3>
 
    <hr />

    <EditForm Model="@Employ" OnValidSubmit="SubmitFrom" >
    <DataAnnotationsValidator></DataAnnotationsValidator>
   
    
    <div class="form-group row">
        <label for="firstName" class="col-sm-2 col-form-label">First Name</label>
        <div class="col-sm-10">
            <InputText id="firstName" @bind-Value="Employ.FirstName" class="form-control" placeholder="FirstName"></InputText>
            <ValidationMessage For="@(()=>Employ.FirstName)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <label for="lastname" class="col-sm-2 col-form-label">Last Name</label>
        <div class="col-sm-10">
            <InputText id="lastname" @bind-Value="Employ.LastName" class="form-control" placeholder="LastName"></InputText>
            <ValidationMessage For="@(()=>Employ.LastName)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <label for="email" class="col-sm-2 col-form-label">Email</label>
        <div class="col-sm-10">
            <InputText id="email" @bind-Value="Employ.Email" class="form-control" placeholder="abc@pragim.com"></InputText>
            <ValidationMessage For="@(()=>Employ.Email)"></ValidationMessage>
        </div>
    </div>
   
    <div class="form-group row">
        <label for="dob" class="col-sm-2 col-form-label">DOB</label>
        <div class="col-sm-10">
            <InputDate id="dob" @bind-Value="Employ.DateOfBirth" class="form-control"></InputDate>
            <ValidationMessage For="@(()=>Employ.DateOfBirth)"></ValidationMessage>
        </div>
    </div>
  <div class="form-group row">
        <label for="pwd" class="col-sm-2 col-form-label">Password</label>
        <div class="col-sm-10">
            <InputText id="pwd" @bind-Value="Employ.Password" class="form-control" placeholder="password" type="password"></InputText>
            <ValidationMessage For="@(()=>Employ.Password)"></ValidationMessage>
        </div>
    </div>
   <div class="form-group row">
        <label for="cpwd" class="col-sm-2 col-form-label">Confirm Password</label>
        <div class="col-sm-10">
            <InputText id="cpwd" @bind-Value="Employ.ConfirmPassword" class="form-control" placeholder="confirm password" type="password"></InputText>

            <ValidationMessage For="@(()=>Employ.ConfirmPassword)"></ValidationMessage>
        </div>
    </div>
  


    <div class="form-group row">
        <label  class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
                

     <button type="submit" class="btn btn-primary " >Submit</button>
        </div>
    </div>
    </EditForm>
    <br />
    @if(status!="")
    {
        <h3 style="color:green">@status</h3>
    
}

       

@code {
    public Employee Employ =new Employee();
    private string status = "";
    private async Task SubmitFrom()
    {

        var confirmed = await _jsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to add this employee?");

        if (confirmed)
        {
           
            var result = await _http.PostAsJsonAsync<Employee>("api/Login/addemp", Employ);

            if (result.IsSuccessStatusCode)
            {
                status = "Employee Registered Successfully..!";
            }
        }
    }

}
